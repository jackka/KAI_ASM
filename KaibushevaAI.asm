Comment &
A1*x1 + A2*x2 + A3*x3 + A4*x4 + A5*x5 = D,
xi - неизвестные положительные целые, Ai и DРзаданные положительные целые константы
i=1,..,5
ђазмер начальной популЯции N задаЮт пользователь в диапазоне  4<= N<= 10. 
ЌачальнаЯпопулЯциЯ формируетсЯ случайным образом.
Љритерии останова:
1) превышение заданного пользователем количества итераций M;
2) достижение нулевого значениЯ целевой функции.
‚ид селекции  :   cлучайнаЯ схема [4]
‚ид скрещиваниЯ  :   одноточечное [4]
ЊутациЯ   :   изменение случайно выбранного бита;
Љоличество скрещиваемых особей и вероЯтность мутации задаютсЯ пользователем.
’ребованиЯ к программе
программа должна работать в двух режимах:
тестовый
основной
‚ тестовом режиме программа выводит на экран популЯцию решений, получаемую на каждом шаге работы алгоритма. 
‚ основном режиме выводитсЯ только решение, значение функции (невЯзка уравнениЯ, котораЯ в идеале должна обращатьсЯ в ноль) и количество сделанных итераций.
‚се шаги алгоритма (генерациЯ начальной популЯции, селекциЯ, скрещивание, мутациЯ, вычисление целевой функции), должны быть реализованы в виде отдельных процедур.
&

include console.inc 

extern  Random@0:near, Selection@0:near, Skreshiv@0:near, Mutation@0:near, Korni@0:near  ;внешние процедуры

.data
N    DB ?			;размер начальной популЯции в диапазоне  4<= N<= 10
X    DB 5 DUP (?)		
A    DB 5 DUP (?)		;вводит пользователь
D    DD ?			;вводит пользователь
M    DB ?			;количество итераций
K    DB ?			;количество скрещиваемых особей
P    DB ?			;вероЯтность мутации (1/p)

.code
start:

outstrln "введите N в диапазоне 4...10"
outwordln N

outstr "A1="					;запрос на ввод A1
inintln AL					;разместим введенное значение в AL
mov byte ptr [A],AL				;по адресу первого элемента A записываем байт из AL
outstr "A2="					;запрос на ввод A2
inintln AL					;разместим введенное значение в AL
mov byte ptr [A+1],AL				;по адресу второго элемента A записываем байт из AL
outstr "A3="					;запрос на ввод A1
inintln AL					;разместим введенное значение в AL
mov byte ptr [A+2],AL				;по адресу третьего элемента A записываем байт из AL
outstr "A4="					;запрос на ввод A1
inintln AL					;разместим введенное значение в AL
mov byte ptr [A+3],AL				;по адресу четвертого элемента A записываем байт из AL
outstr "A5="					;запрос на ввод A1
inintln AL					;разместим введенное значение в AL
mov byte ptr [A+4],AL				;по адресу четвертого элемента A записываем байт из AL

outstrln "введите D"
outwordln D

outstrln "введите M"
outwordln M

outstrln "введите K"
outwordln K

outstrln "введите P"
outwordln P

end start

